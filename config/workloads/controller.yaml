apiVersion: apps/v1
kind: Deployment
metadata:
  name: openelb-controller
  labels:
    component: controller
    app: openelb
spec:
  selector:
    matchLabels:
      component: controller
      app: openelb
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        component: controller
        app: openelb
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - openelb-controller
              topologyKey: "kubernetes.io/hostname"
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        # cloud controller manages should be able to run on masters
        - key: "node-role.kubernetes.io/master"
          effect: NoSchedule
        - key: "node-role.kubernetes.io/control-plane"
          effect: NoSchedule
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: openelb-controller
      containers:
        - command:
            - openelb-controller
          args:
            - --metrics-addr=:50052
            - --webhook-port=443
            - --leader-elect
          image: controller:latest
          imagePullPolicy: IfNotPresent
          name: openelb-controller
          env:
            - name: OPENELB_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OPENELB_DEPLOYNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          ports:
            - containerPort: 443
              name: webhook
              protocol: TCP
          volumeMounts:
            - name: webhook-cert
              mountPath: /tmp/k8s-webhook-server/serving-certs/
              readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
        - name: webhook-cert
          secret:
            secretName: openelb-admission
            items:
              - key: key
                path: tls.key
              - key: cert
                path: tls.crt

---
apiVersion: v1
kind: Service
metadata:
  name: openelb-controller
spec:
  type: ClusterIP
  ports:
    - name: https-webhook
      port: 443
      targetPort: webhook
  selector:
      component: controller
      app: openelb

